option_settings:
  - option_name:  ZONE_ID
    value:  Z057607233JNTM00984A2
  - option_name:  DNS_NAME
    value:  tobereplaced.beanstalk.internal
files:
  /root/updateDNS.sh:
    mode: "00700"
    owner: root
    group: root
    content: |
      #!/bin/bash
      AZ=$(wget -qO- http://instance-data/latest/meta-data/placement/availability-zone)
      REGION=${AZ%?}
      INSTANCE_IP=$(wget -qO- http://instance-data/latest/meta-data/local-ipv4)
      ZONE_ID=$(/opt/elasticbeanstalk/bin/get-config environment -k ZONE_ID)
      DNSNAME=$(/opt/elasticbeanstalk/bin/get-config environment -k DNS_NAME)
      #make sure the json file is gone
      rm -rf /root/dns.json
      cat <<EOT >> /root/dns.json
      {
        "Comment": "EBExtensionsDNSRegistration",
        "Changes": [
           {
            "Action": "UPSERT",
            "ResourceRecordSet": {
              "Name": "$DNSNAME",
              "Type": "A",
              "TTL": 60,
              "ResourceRecords": [
                {
                  "Value": "$INSTANCE_IP"
                }
              ]
            }
          }
        ]
      }
      EOT
      unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN AWS_SECURITY_TOKEN
      ROLE_ARN="arn:aws:iam::532750756126:role/rl-inbo-ops-route53"
      DURATION="900"
      NAME="Records-$(date +'%m-%d-%Y')"
      aws sts assume-role --role-arn $ROLE_ARN --role-session-name $NAME | grep -w 'AccessKeyId\|SecretAccessKey\|SessionToken' | awk  '{print $2}' | sed  's/\"//g;s/\,//' > awscre;export AWS_ACCESS_KEY_ID=`sed -n '3p' awscre`;export AWS_SECRET_ACCESS_KEY=`sed -n '1p' awscre`;export AWS_SECURITY_TOKEN=`sed -n '2p' awscre`
      aws route53 change-resource-record-sets --hosted-zone-id $ZONE_ID --change-batch file:///root/dns.json --region $REGION
      unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN AWS_SECURITY_TOKEN
commands:
    00_UpdateDNS:
      command: /root/updateDNS.sh
